# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4
trim_trailing_whitespace = true

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### Microsoft .NET Coding Conventions #### https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true: suggestion
dotnet_style_predefined_type_for_member_access = true: suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity: suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity: suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity: suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity: suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members: suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true: suggestion
dotnet_style_collection_initializer = true: suggestion
dotnet_style_explicit_tuple_names = true: suggestion
dotnet_style_null_propagation = true: suggestion
dotnet_style_object_initializer = true: suggestion
dotnet_style_prefer_auto_properties = true: suggestion
dotnet_style_prefer_compound_assignment = false: suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true: suggestion
dotnet_style_prefer_conditional_expression_over_return = true: suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true: suggestion
dotnet_style_prefer_inferred_tuple_names = true: suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true: suggestion

# Field preferences
dotnet_style_readonly_field = true: suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all: suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false: suggestion
csharp_style_var_for_built_in_types = false: suggestion
csharp_style_var_when_type_is_apparent = false

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true: suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true: suggestion
csharp_style_prefer_switch_expression = true: suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true: suggestion

# Modifier preferences
csharp_prefer_static_local_function = true: suggestion
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

# Code-block preferences
csharp_prefer_braces = true: suggestion
csharp_prefer_simple_using_statement = false: suggestion #to verify during coding : https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063

# Expression-level preferences
csharp_prefer_simple_default_expression = true: suggestion
csharp_style_deconstructed_variable_declaration = false: suggestion
csharp_style_inlined_variable_declaration = true: suggestion
csharp_style_pattern_local_over_anonymous_function = true: suggestion
csharp_style_prefer_index_operator = false: suggestion
csharp_style_prefer_range_operator = false: suggestion
csharp_style_throw_expression = true: suggestion
csharp_style_unused_value_assignment_preference = discard_variable: suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable: suggestion

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace: suggestion

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
resharper_csharp_wrap_before_comma = false
resharper_csharp_wrap_before_eq = true

#### Naming styles ####

# Naming rules
dotnet_naming_rule.private_field_should_be_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_field_should_be_begins_with_underscore.symbols = private_or_internal_field
dotnet_naming_rule.private_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.severity = silent
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.constant_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_should_be_pascal_case.symbols = constant
dotnet_naming_rule.constant_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_camel_case.severity = error
dotnet_naming_rule.private_or_internal_field_should_be_camel_case.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_camel_case.style = camel_case

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.async_method_should_be_end_with_async.severity = suggestion
dotnet_naming_rule.async_method_should_be_end_with_async.symbols = async_method
dotnet_naming_rule.async_method_should_be_end_with_async.style = end_with_async

# Symbol specifications

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers =

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.constant.applicable_kinds = namespace, property, field, event, parameter, local, class, struct, interface, enum, delegate, method, local_function
dotnet_naming_symbols.constant.applicable_accessibilities = *
dotnet_naming_symbols.constant.required_modifiers = const

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.async_method.applicable_kinds = method
dotnet_naming_symbols.async_method.applicable_accessibilities = *
dotnet_naming_symbols.async_method.required_modifiers = async

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix =
dotnet_naming_style.begins_with_underscore.word_separator =
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.end_with_async.required_prefix =
dotnet_naming_style.end_with_async.required_suffix = Async
dotnet_naming_style.end_with_async.word_separator =
dotnet_naming_style.end_with_async.capitalization = pascal_case

#### ReSharper #### : https://www.jetbrains.com/help/resharper/EditorConfig_Properties.html

#blank lines
resharper_csharp_remove_blank_lines_near_braces_in_declarations = true
resharper_csharp_remove_blank_lines_near_braces_in_code = true

resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1

resharper_csharp_blank_lines_around_local_method = 1
resharper_csharp_blank_lines_around_single_line_local_method = 0

resharper_csharp_blank_lines_before_block_statements = 1
resharper_csharp_blank_lines_after_block_statements = 1

resharper_csharp_blank_lines_before_multiline_statements = 1
resharper_csharp_blank_lines_after_multiline_statements = 1

resharper_csharp_blank_lines_around_multiline_case_section = 0
resharper_csharp_blank_lines_before_case = 0
resharper_csharp_blank_lines_after_case = 0

resharper_csharp_blank_lines_around_single_line_type = 0
resharper_csharp_blank_lines_inside_type = 0
resharper_csharp_blank_lines_around_field = 0
resharper_csharp_blank_lines_around_single_line_field = 0

resharper_csharp_blank_lines_around_single_line_property = 0
resharper_csharp_blank_lines_around_auto_property = 0
resharper_csharp_blank_lines_around_single_line_auto_property = 0

resharper_csharp_blank_lines_around_accessor = 1
resharper_csharp_blank_lines_around_single_line_accessor = 0

resharper_csharp_blank_lines_around_invocable = 1
resharper_csharp_blank_lines_around_single_line_invocable = 0

resharper_csharp_blank_lines_before_control_transfer_statements = 1
resharper_csharp_blank_lines_after_control_transfer_statements = 1

##Usings
resharper_csharp_blank_lines_between_using_groups = 1
resharper_csharp_blank_lines_after_using_list = 1

##Namespace
resharper_csharp_blank_lines_inside_namespace = 0
resharper_csharp_blank_lines_after_file_scoped_namespace_directive = 1

#braces layout
resharper_csharp_type_declaration_braces = next_line
resharper_csharp_invocable_declaration_braces = next_line
resharper_csharp_anonymous_method_declaration_braces = next_line
resharper_csharp_accessor_owner_declaration_braces = next_line
resharper_csharp_accessor_declaration_braces = next_line
resharper_csharp_case_block_braces = next_line
resharper_csharp_initializer_braces = next_line
resharper_csharp_other_braces = next_line
resharper_csharp_brace_style = next_line

resharper_csharp_allow_comment_after_lbrace = false
resharper_csharp_use_continuous_indent_inside_initializer_braces = true

resharper_csharp_indent_inside_namespace = true

resharper_csharp_empty_block_style = together_same_line

#Syntax Style
resharper_csharp_for_built_in_types = use_explicit_type
resharper_csharp_for_simple_types = use_explicit_type
resharper_csharp_for_other_types = use_explicit_type
resharper_csharp_object_creation_when_type_evident = explicitly_typed
resharper_csharp_object_creation_when_type_not_evident = explicitly_typed

resharper_csharp_prefer_explicit_discard_declaration = true

resharper_csharp_instance_members_qualify_members = none
resharper_csharp_static_members_qualify_members = none

resharper_csharp_sort_usings_with_system_first = true

resharper_csharp_parentheses_non_obvious_operations = multiplicative, additive, arithmetic, bitwise, bitwise_and, bitwise_exclusive_or, bitwise_inclusive_or, conditional, conditional_and, conditional_or, equality, null_coalescing, range, relational, shift
resharper_csharp_parentheses_group_non_obvious_operations = arithmetic, relational, conditional

resharper_csharp_braces_for_ifelse = required
resharper_csharp_braces_for_for = required
resharper_csharp_braces_for_foreach = required
resharper_csharp_braces_for_while = required
resharper_csharp_braces_for_dowhile = required
resharper_csharp_braces_for_using = required
resharper_csharp_braces_for_lock = required
resharper_csharp_braces_for_fixed = required

resharper_csharp_method_or_operator_body = expression_body
resharper_csharp_local_function_body = expression_body
resharper_csharp_constructor_or_destructor_body = expression_body
resharper_csharp_accessor_owner_body = expression_body

resharper_csharp_namespace_body = file_scoped

resharper_csharp_force_attribute_style = separate

resharper_csharp_trailing_comma_in_multiline_lists = false
resharper_csharp_trailing_comma_in_singleline_lists = false

resharper_csharp_default_value_when_type_evident = default_literal
resharper_csharp_default_value_when_type_not_evident = default_literal

#breaks
resharper_csharp_special_else_if_treatment = false

resharper_csharp_insert_final_newline = true

resharper_csharp_place_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_method_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_accessor_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_accessorholder_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_field_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_record_field_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_type_attribute_on_same_line = if_owner_is_single_line
resharper_csharp_place_expr_method_on_single_line = if_owner_is_single_line
resharper_csharp_place_expr_property_on_single_line = if_owner_is_single_line
resharper_csharp_place_expr_accessor_on_single_line = if_owner_is_single_line


resharper_csharp_wrap_parameters_style = chop_if_long

resharper_csharp_keep_existing_declaration_parens_arrangement = false
resharper_csharp_wrap_before_declaration_lpar = false
resharper_wrap_after_declaration_lpar = false
resharper_csharp_wrap_before_declaration_rpar = false

resharper_csharp_place_constructor_initializer_on_same_line = false
resharper_csharp_wrap_primary_constructor_parameters_style = chop_if_long
resharper_csharp_wrap_before_primary_constructor_declaration_lpar = false
resharper_csharp_wrap_after_primary_constructor_declaration_lpar = false
resharper_csharp_wrap_before_primary_constructor_declaration_rpar = false

resharper_csharp_wrap_before_arrow_with_expressions = false

resharper_csharp_wrap_after_dot_in_method_calls = false

resharper_csharp_place_type_constraints_on_same_line = true
resharper_csharp_wrap_multiple_type_parameter_constraints_style = chop_if_long

resharper_csharp_wrap_before_type_parameter_langle = false

resharper_csharp_wrap_extends_list_style = chop_if_long

resharper_csharp_place_abstract_accessorholder_on_single_line = true

resharper_csharp_wrap_enum_declaration = chop_if_long

resharper_csharp_new_line_before_while = true

resharper_csharp_wrap_multiple_declaration_style = chop_if_long

resharper_csharp_place_simple_case_statement_on_same_line = never

resharper_csharp_wrap_property_pattern = chop_if_long

resharper_csharp_wrap_list_pattern = chop_if_long

resharper_csharp_wrap_object_and_collection_initializer_style = chop_if_long

resharper_csharp_wrap_array_initializer_style = chop_if_long

resharper_csharp_wrap_arguments_style = chop_if_long

resharper_csharp_wrap_after_invocation_lpar = false
resharper_csharp_wrap_before_invocation_rpar = false

resharper_csharp_wrap_chained_method_calls = chop_if_long
resharper_csharp_wrap_before_first_method_call = false
resharper_csharp_wrap_after_property_in_chained_method_calls = true

resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_chained_binary_expressions = chop_if_long
resharper_csharp_wrap_before_binary_pattern_op = true
resharper_csharp_wrap_chained_binary_patterns = chop_if_long

resharper_csharp_force_chop_compound_if_expression = false
resharper_csharp_force_chop_compound_while_expression = false
resharper_csharp_force_chop_compound_do_expression = false

resharper_csharp_wrap_before_ternary_opsigns = true

resharper_csharp_wrap_ternary_expr_style = chop_if_long

resharper_csharp_nested_ternary_style = expanded

resharper_csharp_wrap_linq_expressions = chop_if_long
resharper_csharp_wrap_before_linq_expression = false

resharper_csharp_max_array_initializer_elements_on_line = 2
resharper_csharp_max_attribute_length_for_same_line = 2
resharper_csharp_max_enum_members_on_line = 2
resharper_csharp_max_formal_parameters_on_line = 2
resharper_csharp_max_initializer_elements_on_line = 2
resharper_csharp_max_invocation_arguments_on_line = 2
resharper_csharp_max_primary_constructor_parameters_on_line = 2

#Spaces
resharper_csharp_extra_spaces = remove_all

resharper_csharp_space_before_if_parentheses = true
resharper_csharp_space_before_while_parentheses = true
resharper_csharp_space_before_catch_parentheses = true
resharper_csharp_space_before_switch_parentheses = true
resharper_csharp_space_before_for_parentheses = true
resharper_csharp_space_before_foreach_parentheses = true
resharper_csharp_space_before_using_parentheses = true
resharper_csharp_space_before_lock_parentheses = true
resharper_csharp_space_before_fixed_parentheses = true
resharper_csharp_space_before_method_call_parentheses = false
resharper_csharp_space_before_empty_method_call_parentheses = false
resharper_csharp_space_before_method_parentheses = false
resharper_csharp_space_before_empty_method_parentheses = false
resharper_csharp_space_before_typeof_parentheses = false
resharper_csharp_space_before_default_parentheses = false
resharper_csharp_space_before_checked_parentheses = false
resharper_csharp_space_before_sizeof_parentheses = false
resharper_csharp_space_before_nameof_parentheses = false
resharper_csharp_space_before_new_parentheses = false
resharper_csharp_space_between_keyword_and_expression = true
resharper_csharp_space_between_keyword_and_type = true

resharper_csharp_space_within_if_parentheses = false
resharper_csharp_space_within_while_parentheses = false
resharper_csharp_space_within_catch_parentheses = false
resharper_csharp_space_within_switch_parentheses = false
resharper_csharp_space_within_for_parentheses = false
resharper_csharp_space_within_foreach_parentheses = false
resharper_csharp_space_within_using_parentheses = false
resharper_csharp_space_within_lock_parentheses = false
resharper_csharp_space_within_fixed_parentheses = false
resharper_csharp_space_within_parentheses = false
resharper_csharp_space_between_typecast_parentheses = false
resharper_csharp_space_within_typeof_parentheses = false
resharper_csharp_space_within_default_parentheses = false
resharper_csharp_space_within_checked_parentheses = false
resharper_csharp_space_within_sizeof_parentheses = false
resharper_csharp_space_within_nameof_parentheses = false
resharper_csharp_space_within_new_parentheses = false
resharper_csharp_space_before_type_parameter_angle = false
resharper_csharp_space_before_type_argument_angle = false
resharper_csharp_space_within_type_parameter_angles = false
resharper_csharp_space_within_type_argument_angles = false
resharper_csharp_space_before_singleline_accessorholder = true
resharper_csharp_space_in_singleline_accessorholder = true
resharper_csharp_space_between_accessors_in_singleline_property = true
resharper_csharp_space_within_empty_braces = false
resharper_csharp_space_in_singleline_method = true
resharper_csharp_space_in_singleline_anonymous_method = true
resharper_csharp_space_within_single_line_array_initializer_braces = false

resharper_csharp_space_around_assignment_op = true
resharper_csharp_space_around_binary_operator = true
resharper_csharp_space_around_logical_op = true
resharper_csharp_space_around_equality_op = true
resharper_csharp_space_around_relational_op = true
resharper_csharp_space_around_bitwise_op = true
resharper_csharp_space_around_additive_op = true
resharper_csharp_space_around_multiplicative_op = true
resharper_csharp_space_around_shift_op = true
resharper_csharp_space_around_nullcoalescing_op = true
resharper_csharp_space_around_arrow_op = true

resharper_csharp_space_after_logical_not_op = false
resharper_csharp_space_after_unary_operator = false
resharper_csharp_space_after_unary_minus_op = false
resharper_csharp_space_after_unary_plus_op = false
resharper_csharp_space_after_ampersand_op = false
resharper_csharp_space_after_asterik_op = false

resharper_csharp_space_near_postfix_and_prefix_op = false

resharper_csharp_space_before_ternary_quest = true
resharper_csharp_space_around_ternary_operator = true
resharper_csharp_space_after_ternary_quest = true
resharper_csharp_space_before_ternary_colon = true
resharper_csharp_space_after_ternary_colon = true
resharper_csharp_space_before_semicolon = false
resharper_csharp_space_before_type_parameter_constraint_colon = true
resharper_csharp_space_after_type_parameter_constraint_colon = true
resharper_csharp_space_before_colon_in_case = false
resharper_csharp_space_after_colon_in_case = true
resharper_csharp_space_before_attribute_colon = false
resharper_csharp_space_after_attribute_colon = true
resharper_csharp_space_between_attribute_sections = false
resharper_csharp_space_after_attributes = true
resharper_csharp_space_around_dot = false
resharper_csharp_space_around_member_access_operator = false
resharper_csharp_space_around_lambda_arrow = true
resharper_csharp_space_before_pointer_asterik_declaration = false
resharper_csharp_space_before_nullable_mark = false
resharper_csharp_space_around_alias_eq = true
resharper_csharp_space_before_trailing_comment = true
resharper_csharp_space_after_operator_keyword = true
resharper_csharp_space_within_slice_pattern = false